# ============================================
# Docker Compose Configuration for Clipers Backend
# ============================================
# Services: PostgreSQL, Redis, Spring Boot Backend
# Network: Internal Docker network for service communication
# Volumes: Persistent data storage for PostgreSQL and Redis
# ============================================

services:
  postgres:
    image: postgres:15
    container_name: clipers-postgres
    environment:
      POSTGRES_DB: clipers_db
      POSTGRES_USER: clipers_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ClipersSecurePass123!}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - clipers-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: clipers-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - clipers-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: clipers-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/clipers_db
      SPRING_DATASOURCE_USERNAME: clipers_user
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-ClipersSecurePass123!}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_TIMEOUT: 2000ms
      JWT_SECRET: ${JWT_SECRET:-mySuperSecretKey123456789012345678901234567890123456789012345678901234567890}
      JWT_EXPIRATION: 86400000
      SERVER_PORT: 8080
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:8080,http://localhost:5173
      AI_WEIGHT_AI: 0.6
      AI_WEIGHT_ATS: 0.3
      AI_WEIGHT_PROFILE: 0.1
      CACHE_TTL: 1800
      SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE: 50MB
      SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE: 50MB
      FILE_UPLOAD_DIR: ./uploads
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,metrics,prometheus
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_CLIPERS: DEBUG
      LOGGING_LEVEL_COM_CLIPERS_AI_INTEGRATION: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_DATA_REDIS: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: INFO
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: INFO
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: DEBUG
      LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL_BASICBINDER: TRACE
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: clipers
      SPRING_RABBITMQ_PASSWORD: clipers123
      VIDEO_PROCESSING_SERVICE_URL: https://micoservicioprocesarvideo.onrender.com
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - clipers-network
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  clipers-network:
    driver: bridge
